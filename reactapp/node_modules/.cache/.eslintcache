[{"/home/coder/project/workspace/reactapp/src/index.js":"1","/home/coder/project/workspace/reactapp/src/App.js":"2","/home/coder/project/workspace/reactapp/src/reportWebVitals.js":"3","/home/coder/project/workspace/reactapp/src/components/Layout.js":"4","/home/coder/project/workspace/reactapp/src/components/Login.js":"5","/home/coder/project/workspace/reactapp/src/components/Admin/AdminGifts.js":"6","/home/coder/project/workspace/reactapp/src/components/Admin/Adminvieworders.js":"7","/home/coder/project/workspace/reactapp/src/components/Admin/AdminThemes.js":"8","/home/coder/project/workspace/reactapp/src/components/User/Registration.js":"9","/home/coder/project/workspace/reactapp/src/components/Admin/adminService.js":"10","/home/coder/project/workspace/reactapp/src/components/User/userService.js":"11","/home/coder/project/workspace/reactapp/src/components/Home/Homepage.js":"12","/home/coder/project/workspace/reactapp/src/components/Order/Myorder.js":"13","/home/coder/project/workspace/reactapp/src/components/Order/PlaceOrder.js":"14","/home/coder/project/workspace/reactapp/src/components/User/PaymentForm.js":"15","/home/coder/project/workspace/reactapp/src/components/User/ThankYou.js":"16"},{"size":501,"mtime":1695558983151,"results":"17","hashOfConfig":"18"},{"size":1714,"mtime":1695572520438,"results":"19","hashOfConfig":"18"},{"size":362,"mtime":1695558983151,"results":"20","hashOfConfig":"18"},{"size":1053,"mtime":1695574801598,"results":"21","hashOfConfig":"18"},{"size":2384,"mtime":1695567632195,"results":"22","hashOfConfig":"18"},{"size":14232,"mtime":1695572972758,"results":"23","hashOfConfig":"18"},{"size":7712,"mtime":1695572983709,"results":"24","hashOfConfig":"18"},{"size":11506,"mtime":1695572978407,"results":"25","hashOfConfig":"18"},{"size":3673,"mtime":1695559242366,"results":"26","hashOfConfig":"18"},{"size":324,"mtime":1695563440921,"results":"27","hashOfConfig":"18"},{"size":689,"mtime":1695563426511,"results":"28","hashOfConfig":"18"},{"size":2690,"mtime":1695566619618,"results":"29","hashOfConfig":"18"},{"size":5901,"mtime":1695570723854,"results":"30","hashOfConfig":"18"},{"size":6557,"mtime":1695572377752,"results":"31","hashOfConfig":"18"},{"size":2692,"mtime":1695572437956,"results":"32","hashOfConfig":"18"},{"size":308,"mtime":1695559242366,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"4ld517",{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"36"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"36"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"36"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"36"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"/home/coder/project/workspace/reactapp/src/index.js",[],["72","73"],"/home/coder/project/workspace/reactapp/src/App.js",[],"/home/coder/project/workspace/reactapp/src/reportWebVitals.js",[],"/home/coder/project/workspace/reactapp/src/components/Layout.js",[],"/home/coder/project/workspace/reactapp/src/components/Login.js",[],"/home/coder/project/workspace/reactapp/src/components/Admin/AdminGifts.js",[],"/home/coder/project/workspace/reactapp/src/components/Admin/Adminvieworders.js",["74","75"],"import React, { Component } from 'react';\nimport { Container, Row, Col, Form, Button } from 'react-bootstrap';\nimport Nav from 'react-bootstrap/Nav';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\n\nclass Adminvieworders extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      orders: [],  \n      orderId: '',\n      userId: '',\n      giftName: '',\n      price: '',\n      quantity: '',\n      editingIndex: -1, \n    };\n  }\n\n  componentDidMount() {\n    axios\n      .get('https://8080-fcedddbcdbbadadedffcecddbaaecadafbad.premiumproject.examly.io/admin/viewOrders') \n      .then((response) => {\n        this.setState({ orders: response.data });\n      })\n      .catch((error) => {\n        console.error('Error fetching orders:', error);\n      });\n  }\n\n  handleInputChange = (event) => {\n    const { name, value } = event.target;\n    this.setState({ [name]: value });\n  };\n\n  removeOrder = (index) => {\n    const { orders } = this.state;\n    orders.splice(index, 1);\n    this.setState({ orders });\n  };\n  \n  editOrder = (index) => {\n    const { orders } = this.state;\n    this.setState({\n      editingIndex: index,\n      orderId: orders[index].orderId,\n      userId: orders[index].userId,\n      giftName: orders[index].giftName,\n      price: orders[index].price.toString(),\n      quantity: orders[index].quantity.toString(),\n    });\n  };\n\n  saveOrder = (index) => {\n    const { orders, orderId, userId, giftName, price, quantity } = this.state;\n\n    const updatedOrder = {\n      orderId,\n      userId,\n      giftName,\n      price: parseFloat(price),  \n      quantity: parseInt(quantity, 10),  \n    };\n\n    const updatedOrders = [...orders];\n    updatedOrders[index] = updatedOrder;\n\n    this.setState({\n      orders: updatedOrders,\n      editingIndex: -1,  \n      orderId: '',\n      userId: '',\n      giftName: '',\n      price: '',\n      quantity: '',\n    });\n  };\n\n  render() {\n    const { orders, orderId, userId, giftName, price, quantity, editingIndex } = this.state;\n\n    return (\n      <div style={{ backgroundColor: 'grey', minHeight: '100vh' }}>\n        <div style={{ margin: '20px' }}>\n          <Nav defaultActiveKey=\"/Homepage\" as=\"ul\" className=\"justify-content-center\" style={{ backgroundColor: 'green' }}>\n            <div className=\"d-flex\" style={{ fontWeight: 'bold' }}>\n              <div className=\"nav-item mx-2\">\n                <Link to=\"/AdminGifts\" className=\"nav-link\" style={{ color: 'white', fontSize: '20px' }}>\n                  Gifts\n                </Link>\n              </div>\n              <div className=\"nav-item mx-2\">\n                <Link to=\"/Adminvieworders\" className=\"nav-link\" style={{ color: 'white', fontSize: '30px' }}>\n                  Orders\n                </Link>\n              </div>\n              <div className=\"nav-item ml-auto\">\n                <Link to=\"/AdminThemes\" className=\"nav-link\" style={{ color: 'white', fontSize: '20px' }}>\n                  Themes\n                </Link>\n                <Link to=\"/Login\" className=\"nav-link\" style={{ color: 'white', fontSize: '20px' }}>\n                Logout\n              </Link>\n              </div>\n            </div>\n          </Nav>\n        </div>\n        <Container>\n          <Row>\n            <Col md={12}>\n              <h2 style={{ fontSize: '24px' }}></h2>\n              <table className=\"table\">\n                <thead>\n                  <tr style={{ backgroundColor: 'darkgreen' }}>\n                    <th>Order ID</th>\n                    <th>User ID</th>\n                    <th>Gift Name</th>\n                    <th>Price</th>\n                    <th>Quantity</th>\n                    <th>Actions</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {orders.map((order, index) => (\n                    <tr key={index} style={{ backgroundColor: 'lightgreen' }}>\n                      <td>\n                        {editingIndex === index ? (\n                          <input\n                            type=\"text\"\n                            name=\"orderId\"\n                            value={orderId}\n                            onChange={(e) => this.handleInputChange(e)}\n                            style={{ width: '100px' }}\n                          />\n                        ) : (\n                          order.orderId\n                        )}\n                      </td>\n                      <td>\n                        {editingIndex === index ? (\n                          <input\n                            type=\"text\"\n                            name=\"userId\"\n                            value={userId}\n                            onChange={(e) => this.handleInputChange(e)}\n                            style={{ width: '100px' }}\n                          />\n                        ) : (\n                          order.userId\n                        )}\n                      </td>\n                      <td>\n                        {editingIndex === index ? (\n                          <input\n                            type=\"text\"\n                            name=\"giftName\"\n                            value={giftName}\n                            onChange={(e) => this.handleInputChange(e)}\n                            style={{ width: '100px' }}\n                          />\n                        ) : (\n                          order.giftName\n                        )}\n                      </td>\n                      <td>\n                        {editingIndex === index ? (\n                          <input\n                            type=\"text\"\n                            name=\"price\"\n                            value={price}\n                            onChange={(e) => this.handleInputChange(e)}\n                            style={{ width: '100px' }}\n                          />\n                        ) : (\n                          order.price\n                        )}\n                      </td>\n                      <td>\n                        {editingIndex === index ? (\n                          <input\n                            type=\"text\"\n                            name=\"quantity\"\n                            value={quantity}\n                            onChange={(e) => this.handleInputChange(e)}\n                            style={{ width: '100px' }}\n                          />\n                        ) : (\n                          order.quantity\n                        )}\n                      </td>\n                      <td>\n                        {editingIndex === index ? (\n                          <>\n                            <Button variant=\"success\" onClick={() => this.saveOrder(index)} style={{ marginRight: '10px' }}>\n                              Save\n                            </Button>\n                            <Button variant=\"secondary\" onClick={() => this.setState({ editingIndex: -1 })}>\n                              Cancel\n                            </Button>\n                          </>\n                        ) : (\n                          <>\n                            <Button variant=\"warning\" onClick={() => this.editOrder(index)} style={{ marginRight: '10px' }}>\n                              Edit\n                            </Button>\n                            <Button variant=\"danger\" onClick={() => this.removeOrder(index)}>\n                              Remove\n                            </Button>\n                          </>\n                        )}\n                      </td>\n                    </tr>\n                  ))}\n                </tbody>\n              </table>\n            </Col>\n          </Row>\n        </Container>\n      </div>\n    );\n  }\n}\n\nexport default Adminvieworders;\n","/home/coder/project/workspace/reactapp/src/components/Admin/AdminThemes.js",[],"/home/coder/project/workspace/reactapp/src/components/User/Registration.js",["76"],"import Navbar from 'react-bootstrap/Navbar';\nimport Container from 'react-bootstrap/Container';\nimport '../../styles.css';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport React, { useState } from 'react';\nimport { createUser, getUsers} from './userService';\nimport { createAdmin } from '../Admin/adminService';\n\nfunction Registration() {\n    const [formData, setFormData] = useState({\n      email: '',\n      username: '',\n      mobileNumber: '',\n      password: '',\n      confirmPassword: '',\n      userRole:''\n    });\n    const handleChange = (e) => {\n      const { name, value } = e.target;\n      setFormData({\n        ...formData,\n        [name]: value,\n      });\n    };\n    const handleSubmit = (e) => {\n      createUser(formData);\n      createAdmin(formData);\n      e.preventDefault();\n    };\n   \n  return (\n    <div className=\"registration-page\">\n      <Navbar expand=\"lg\" className=\"custom-navbar-bg\">\n        <Container className=\"d-flex justify-content-center\">\n          <Navbar.Brand style={{ color: 'white', fontWeight: 'bold' }}>Registration</Navbar.Brand>\n        </Container>\n      </Navbar>\n      <Container className=\"d-flex justify-content-center mt-5\">\n        <Form onSubmit={handleSubmit}>\n          <Form.Group controlId=\"formUserRole\">\n          <Form.Select\n              aria-label=\"Default select example\"\n              name=\"userRole\"\n              onChange={handleChange}\n              value={formData.userRole}\n            >\n              <option value=\"user\">User</option>\n              <option value=\"admin\">Admin</option>\n            </Form.Select>\n          </Form.Group>\n\n          <Form.Group controlId=\"formBasicEmail\" className=\"mt-3\">\n          <Form.Control\n              type=\"email\"\n              placeholder=\"Enter Email\"\n              style={{ width: '350px' }}\n              name=\"email\"\n              value={formData.email}\n              onChange={handleChange}\n            />\n          </Form.Group>\n\n          <Form.Group controlId=\"formUsername\" className=\"mt-3\">\n          <Form.Control\n              type=\"text\"\n              placeholder=\"Enter Username\"\n              style={{ width: '350px' }}\n              name=\"username\"\n              value={formData.username}\n              onChange={handleChange}\n            />\n          </Form.Group>\n\n          <Form.Group controlId=\"formMobileNumber\" className=\"mt-3\">\n          <Form.Control\n              type=\"text\"\n              placeholder=\"Enter Mobile Number\"\n              style={{ width: '350px' }}\n              name=\"mobileNumber\"\n              value={formData.mobileNumber}\n              onChange={handleChange}\n            />\n          </Form.Group>\n\n          <Form.Group controlId=\"formPassword\" className=\"mt-3\">\n          <Form.Control\n              type=\"password\"\n              placeholder=\"Enter Password\"\n              style={{ width: '350px' }}\n              name=\"password\"\n              value={formData.password}\n              onChange={handleChange}\n            />\n          </Form.Group>\n\n          <Form.Group controlId=\"formConfirmPassword\" className=\"mt-3\">\n          <Form.Control\n              type=\"password\"\n              placeholder=\"Confirm Password\"\n              style={{ width: '350px' }}\n              name=\"confirmPassword\"\n              value={formData.confirmPassword}\n              onChange={handleChange}\n            />\n          </Form.Group>\n          \n          <div className=\"d-flex justify-content-center mt-4\">\n            <Button type=\"submit\" variant=\"primary\" >Register</Button> \n          </div>\n        </Form>\n      </Container>\n    </div>\n  );\n}\n\nexport default Registration;\n","/home/coder/project/workspace/reactapp/src/components/Admin/adminService.js",[],"/home/coder/project/workspace/reactapp/src/components/User/userService.js",["77","78"],"import axios from \"axios\"; // or import 'isomorphic-fetch';\nconst API_BASE_URL = \"http://localhost:8080/user\";\nexport const createUser = async (userData) => {\n  try {alert(userData);\n    const response = await axios.post(`https://8080-fcedddbcdbbadadedffcecddbaaecadafbad.premiumproject.examly.io/user/signup`, userData);\n    return response.data;\n  } catch (error) {\n    throw error;\n  }\n};\nexport const getUsers = async (email) => {\n  try {\n    const response = await axios.get(`https://8080-fcedddbcdbbadadedffcecddbaaecadafbad.premiumproject.examly.io/user/${email}`);\n    return response.data;\n  } catch (error) {\n    throw error;\n  }\n};\n\nexport default {\n  createUser,\n  getUsers,\n};","/home/coder/project/workspace/reactapp/src/components/Home/Homepage.js",[],"/home/coder/project/workspace/reactapp/src/components/Order/Myorder.js",["79"],"import React, { useState, useEffect} from 'react';\nimport { Container, Row, Col, Form, Button, Card, Nav } from 'react-bootstrap';\nimport { Link, useLocation } from 'react-router-dom';\nimport axios from 'axios';\n\nconst themesData = [\n  { id: 1, name: 'Theme 1', price: 5.99 },\n  { id: 2, name: 'Theme 2', price: 7.99 },\n  { id: 3, name: 'Theme 3', price: 9.99 },\n  { id: 4, name: 'Theme 4', price: 6.99 },\n];\n\nconst MyOrders = () => {\n  const [selectedThemes, setSelectedThemes] = useState([]);\n  const location = useLocation();\n  const [giftModel, setGiftModel] = useState('');\n  const [orderPrice, setOrderPrice] = useState('');\n  const [themesData, setThemesData] = useState([]);\n  const handleThemeCheckboxChange = (themeId) => {\n    setSelectedThemes((prevSelectedThemes) => {\n      if (prevSelectedThemes.includes(themeId)) {\n        return prevSelectedThemes.filter((id) => id !== themeId);\n      } else {\n        return [...prevSelectedThemes, themeId];\n      }\n    });\n  };\n\n  useEffect(() => {\n    const params = new URLSearchParams(location.search);\n    const paramName = params.get('giftModel');\n    const paramPrice = params.get('orderPrice');\n    console.log(params,paramName,paramPrice);\n    if (paramName && paramPrice) {\n      setGiftModel(decodeURIComponent(paramName));\n      setOrderPrice(decodeURIComponent(paramPrice));\n    }\n  }, [location]);\n\n  axios\n  .get('https://8080-fcedddbcdbbadadedffcecddbaaecadafbad.premiumproject.examly.io/admin/theme')\n  .then((response) => {\n    setThemesData(response.data);\n  })\n  .catch((error) => {\n    console.error('Error fetching themes:', error);\n  });\n//}, [location]);\n\n  const formatCurrency = (amount) => {\n    const formatter = new Intl.NumberFormat('en-IN', {\n      style: 'currency',\n      currency: 'INR',\n    });\n    return formatter.format(amount);\n  };\n\n  return (\n    <div style={{ backgroundColor: 'grey', minHeight: '100vh' }}>\n      <div style={{ margin: '20px' }}>\n        <Nav defaultActiveKey=\"/Homepage\" as=\"ul\" className=\"justify-content-center\" style={{ backgroundColor: 'green' }}>\n          <div className=\"d-flex\" style={{ fontWeight: 'bold' }}>\n            <div className=\"nav-item mx-2\">\n              <Link to=\"/Homepage\" className=\"nav-link\" style={{ color: 'white', fontSize: '20px' }}>\n                Home\n              </Link>\n            </div>\n            <div className=\"nav-item mx-2\">\n              <Link to=\"/Myorder\" className=\"nav-link\" style={{ color: 'white', fontSize: '30px' }}>\n                My order\n              </Link>\n            </div>\n            <div className=\"nav-item ml-auto\">\n              <Link to=\"/Logout\" className=\"nav-link\" style={{ color: 'white', fontSize: '20px' }}>\n                Logout\n              </Link>\n            </div>\n          </div>\n        </Nav>\n      </div>\n      <Container className=\"mt-4\">\n        <Row>\n          <Col md={6}>\n            <Card style={{ backgroundColor: 'lavender' }}>\n              <Card.Body>\n                <Form>\n                  <Form.Group controlId=\"name\">\n                    <Form.Label>Name</Form.Label>\n                    <Form.Control type=\"text\" placeholder=\"Enter name\" />\n                  </Form.Group>\n                  <Form.Group controlId=\"orderDate\">\n                    <Form.Label>Order Date</Form.Label>\n                    <Form.Control type=\"date\" />\n                  </Form.Group>\n                  <Form.Group controlId=\"address\">\n                    <Form.Label>Address</Form.Label>\n                    <Form.Control type=\"text\" placeholder=\"Enter address\" />\n                  </Form.Group>\n                  <Form.Group controlId=\"phoneNumber\">\n                    <Form.Label>Phone Number</Form.Label>\n                    <Form.Control type=\"tel\" placeholder=\"Enter phone number\" />\n                  </Form.Group>\n                  <Form.Group controlId=\"emailId\">\n                    <Form.Label>Email ID</Form.Label>\n                    <Form.Control type=\"email\" placeholder=\"Enter email ID\" />\n                  </Form.Group>\n                </Form>\n              </Card.Body>\n            </Card>\n          </Col>\n          <Col md={6}>\n            <Card style={{ backgroundColor: 'lavender' }}>\n              <Card.Body>\n                <Form>\n                  <Form.Group controlId=\"orderPrice\">\n                    <Form.Label>Order Price</Form.Label>\n                    <Form.Control defaultValue={orderPrice} type=\"text\" placeholder={formatCurrency(0.0)} readOnly />\n                  </Form.Group>\n                  <Form.Group controlId=\"giftModel\">\n                    <Form.Label>Gift Model</Form.Label>\n                    <Form.Control defaultValue={giftModel} type=\"text\" placeholder=\"Gift model\" readOnly />\n                  </Form.Group>\n                  <Form.Group controlId=\"orderDescription\">\n                    <Form.Label>Order Description</Form.Label>\n                    <Form.Control as=\"textarea\" rows={4} placeholder=\"Order description\" />\n                  </Form.Group>\n                  <Form.Group controlId=\"themeModel\">\n                    <Form.Label>Theme Models</Form.Label>\n                    {themesData.map((theme) => (\n                      <Form.Check\n                        key={theme.id}\n                        type=\"checkbox\"\n                        id={`theme-${theme.id}`}\n                        label={`${theme.name} - ${formatCurrency(theme.price)}`}\n                        checked={selectedThemes.includes(theme.id)}\n                        onChange={() => handleThemeCheckboxChange(theme.id)}\n                      />\n                    ))}\n                  </Form.Group>\n                </Form>\n              </Card.Body>\n            </Card>\n          </Col>\n        </Row>\n        <Button variant=\"primary\" className=\"mt-3\">\n          Place Order\n        </Button>\n      </Container>\n    </div>\n  );\n};\n\nexport default MyOrders;\n","/home/coder/project/workspace/reactapp/src/components/Order/PlaceOrder.js",["80"],"import React, { Component } from 'react';\nimport { Container, Row, Col, Button } from 'react-bootstrap';\nimport Nav from 'react-bootstrap/Nav';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\n\nclass PlaceOrder extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      orders: [],  \n      editingIndex: -1,  \n      editedGiftName: '',  \n      editedPrice: '', \n      editedQuantity: '',  \n    };\n  }\n  \n  componentDidMount() {\n    axios\n      .get('https://8080-fcedddbcdbbadadedffcecddbaaecadafbad.premiumproject.examly.io/user/{orderId}')\n      .then((response) => {\n        this.setState({ orders: response.data });\n      })\n      .catch((error) => {\n        console.error('Error fetching orders:', error);\n      });\n  } \n  handleInputChange = (event) => {\n    const { name, value } = event.target;\n    this.setState({ [name]: value });\n  };\n\n\n  removeOrder = (index) => {\n    const { orders } = this.state;\n    orders.splice(index, 1);\n    this.setState({ orders });\n  };\n\n  editOrder = (index) => {\n    const { orders } = this.state;\n    const { giftName, price, quantity } = orders[index];\n\n    this.setState({\n      editingIndex: index,\n      editedGiftName: giftName,\n      editedPrice: price.toString(),\n      editedQuantity: quantity.toString(),\n    });\n  };\n\n  saveOrder = (index) => {\n    const { orders, editedGiftName, editedPrice, editedQuantity } = this.state;\n\n    const updatedOrder = { ...orders[index], giftName: editedGiftName, price: parseFloat(editedPrice), quantity: parseInt(editedQuantity, 10) };\n    const updatedOrders = [...orders];\n    updatedOrders[index] = updatedOrder;\n\n    this.setState({\n      orders: updatedOrders,\n      editingIndex: -1,  \n      editedGiftName: '',\n      editedPrice: '',\n      editedQuantity: '',\n    });\n  };\n\n  render() {\n    const { orders, editingIndex, editedGiftName, editedPrice, editedQuantity } = this.state;\n\n    return (\n      <div style={{ backgroundColor: 'grey', minHeight: '100vh' }}>\n        <div style={{ margin: '20px' }}>\n          <Nav defaultActiveKey=\"/Homepage\" as=\"ul\" className=\"justify-content-center\" style={{ backgroundColor: 'green' }}>\n            <div className=\"d-flex\" style={{ fontWeight: 'bold' }}>\n              <div className=\"nav-item mx-2\">\n                <Link to=\"/Myorder\" className=\"nav-link\" style={{ color: 'white', fontSize: '20px' }}>\n                  My order\n                </Link>\n              </div>\n              <div className=\"nav-item mx-2\">\n                <Link to=\"/Homepage\" className=\"nav-link\" style={{ color: 'white', fontSize: '30px' }}>\n                  Home\n                </Link>\n              </div>\n              <div className=\"nav-item ml-auto\">\n                <Link to=\"/Login\" className=\"nav-link\" style={{ color: 'white', fontSize: '20px' }}>\n                  Logout\n                </Link>\n              </div>\n            </div>\n          </Nav>\n        </div>\n        <Container>\n          <Row>\n            <Col md={12}>\n              <h2 style={{ fontSize: '24px' }}></h2>\n              <table className=\"table\">\n                <thead>\n                  <tr style={{ backgroundColor: 'darkgreen' }}>\n                    <th>Gift Name</th>\n                    <th>Price</th>\n                    <th>Quantity</th>\n                    <th>Actions</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {orders.map((order, index) => (\n                    <tr key={index} style={{ backgroundColor: 'lightgreen' }}>\n                      <td>\n                        {editingIndex === index ? (\n                          <input\n                            type=\"text\"\n                            name=\"editedGiftName\"\n                            value={editedGiftName}\n                            onChange={(e) => this.handleInputChange(e)}\n                            style={{ width: '100px' }}\n                          />\n                        ) : (\n                          order.giftName\n                        )}\n                      </td>\n                      <td>\n                        {editingIndex === index ? (\n                          <input\n                            type=\"text\"\n                            name=\"editedPrice\"\n                            value={editedPrice}\n                            onChange={(e) => this.handleInputChange(e)}\n                            style={{ width: '100px' }}\n                          />\n                        ) : (\n                          order.price\n                        )}\n                      </td>\n                      <td>\n                        {editingIndex === index ? (\n                          <input\n                            type=\"text\"\n                            name=\"editedQuantity\"\n                            value={editedQuantity}\n                            onChange={(e) => this.handleInputChange(e)}\n                            style={{ width: '100px' }}\n                          />\n                        ) : (\n                          order.quantity\n                        )}\n                      </td>\n                      <td>\n                        {editingIndex === index ? (\n                          <>\n                            <Button variant=\"success\" onClick={() => this.saveOrder(index)} style={{ marginRight: '10px' }}>\n                              Save\n                            </Button>\n                            <Button variant=\"secondary\" onClick={() => this.setState({ editingIndex: -1 })}>\n                              Cancel\n                            </Button>\n                          </>\n                        ) : (\n                          <>\n                            <Button variant=\"warning\" onClick={() => this.editOrder(index)} style={{ marginRight: '10px' }}>\n                              Edit\n                            </Button>\n                            <Button variant=\"danger\" onClick={() => this.removeOrder(index)}>\n                              Remove\n                            </Button>\n                          </>\n                        )}\n                      </td>\n                    </tr>\n                  ))}\n                </tbody>\n              </table>\n            </Col>\n          </Row>\n        </Container>\n        <div className=\"text-center\">\n          <Button variant=\"primary\">\n          <Link to=\"/PaymentForm\">\n            Pay\n            </Link>\n          </Button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default PlaceOrder;\n","/home/coder/project/workspace/reactapp/src/components/User/PaymentForm.js",[],"/home/coder/project/workspace/reactapp/src/components/User/ThankYou.js",[],{"ruleId":"81","replacedBy":"82"},{"ruleId":"83","replacedBy":"84"},{"ruleId":"85","severity":1,"message":"86","line":2,"column":31,"nodeType":"87","messageId":"88","endLine":2,"endColumn":35},{"ruleId":"89","severity":1,"message":"90","line":112,"column":15,"nodeType":"91","endLine":112,"endColumn":48},{"ruleId":"85","severity":1,"message":"92","line":7,"column":22,"nodeType":"87","messageId":"88","endLine":7,"endColumn":30},{"ruleId":"85","severity":1,"message":"93","line":2,"column":7,"nodeType":"87","messageId":"88","endLine":2,"endColumn":19},{"ruleId":"94","severity":1,"message":"95","line":20,"column":1,"nodeType":"96","endLine":23,"endColumn":3},{"ruleId":"85","severity":1,"message":"97","line":6,"column":7,"nodeType":"87","messageId":"88","endLine":6,"endColumn":17},{"ruleId":"89","severity":1,"message":"90","line":98,"column":15,"nodeType":"91","endLine":98,"endColumn":48},"no-native-reassign",["98"],"no-negated-in-lhs",["99"],"no-unused-vars","'Form' is defined but never used.","Identifier","unusedVar","jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","JSXOpeningElement","'getUsers' is defined but never used.","'API_BASE_URL' is assigned a value but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","'themesData' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]