[{"/home/coder/project/workspace/reactapp/src/index.js":"1","/home/coder/project/workspace/reactapp/src/App.js":"2","/home/coder/project/workspace/reactapp/src/reportWebVitals.js":"3","/home/coder/project/workspace/reactapp/src/components/Layout.js":"4","/home/coder/project/workspace/reactapp/src/components/Login.js":"5","/home/coder/project/workspace/reactapp/src/components/Admin/AdminGifts.js":"6","/home/coder/project/workspace/reactapp/src/components/Admin/Adminvieworders.js":"7","/home/coder/project/workspace/reactapp/src/components/Admin/AdminThemes.js":"8","/home/coder/project/workspace/reactapp/src/components/User/Registration.js":"9","/home/coder/project/workspace/reactapp/src/components/Admin/adminService.js":"10","/home/coder/project/workspace/reactapp/src/components/User/userService.js":"11","/home/coder/project/workspace/reactapp/src/components/Home/Homepage.js":"12","/home/coder/project/workspace/reactapp/src/components/Order/Myorder.js":"13","/home/coder/project/workspace/reactapp/src/components/Order/PlaceOrder.js":"14"},{"size":501,"mtime":1695558983151,"results":"15","hashOfConfig":"16"},{"size":1486,"mtime":1695559595492,"results":"17","hashOfConfig":"16"},{"size":362,"mtime":1695558983151,"results":"18","hashOfConfig":"16"},{"size":873,"mtime":1695559875869,"results":"19","hashOfConfig":"16"},{"size":2385,"mtime":1695563132484,"results":"20","hashOfConfig":"16"},{"size":14211,"mtime":1695563027296,"results":"21","hashOfConfig":"16"},{"size":7566,"mtime":1695563102671,"results":"22","hashOfConfig":"16"},{"size":11400,"mtime":1695563081807,"results":"23","hashOfConfig":"16"},{"size":3673,"mtime":1695559242366,"results":"24","hashOfConfig":"16"},{"size":324,"mtime":1695563440921,"results":"25","hashOfConfig":"16"},{"size":689,"mtime":1695563426511,"results":"26","hashOfConfig":"16"},{"size":2638,"mtime":1695559546293,"results":"27","hashOfConfig":"16"},{"size":5585,"mtime":1695559296600,"results":"28","hashOfConfig":"16"},{"size":6229,"mtime":1695559296600,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"4ld517",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"32"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"32"},"/home/coder/project/workspace/reactapp/src/index.js",[],["61","62"],"/home/coder/project/workspace/reactapp/src/App.js",[],"/home/coder/project/workspace/reactapp/src/reportWebVitals.js",[],"/home/coder/project/workspace/reactapp/src/components/Layout.js",[],"/home/coder/project/workspace/reactapp/src/components/Login.js",[],"/home/coder/project/workspace/reactapp/src/components/Admin/AdminGifts.js",[],"/home/coder/project/workspace/reactapp/src/components/Admin/Adminvieworders.js",["63","64"],"/home/coder/project/workspace/reactapp/src/components/Admin/AdminThemes.js",[],"/home/coder/project/workspace/reactapp/src/components/User/Registration.js",["65"],"import Navbar from 'react-bootstrap/Navbar';\nimport Container from 'react-bootstrap/Container';\nimport '../../styles.css';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport React, { useState } from 'react';\nimport { createUser, getUsers} from './userService';\nimport { createAdmin } from '../Admin/adminService';\n\nfunction Registration() {\n    const [formData, setFormData] = useState({\n      email: '',\n      username: '',\n      mobileNumber: '',\n      password: '',\n      confirmPassword: '',\n      userRole:''\n    });\n    const handleChange = (e) => {\n      const { name, value } = e.target;\n      setFormData({\n        ...formData,\n        [name]: value,\n      });\n    };\n    const handleSubmit = (e) => {\n      createUser(formData);\n      createAdmin(formData);\n      e.preventDefault();\n    };\n   \n  return (\n    <div className=\"registration-page\">\n      <Navbar expand=\"lg\" className=\"custom-navbar-bg\">\n        <Container className=\"d-flex justify-content-center\">\n          <Navbar.Brand style={{ color: 'white', fontWeight: 'bold' }}>Registration</Navbar.Brand>\n        </Container>\n      </Navbar>\n      <Container className=\"d-flex justify-content-center mt-5\">\n        <Form onSubmit={handleSubmit}>\n          <Form.Group controlId=\"formUserRole\">\n          <Form.Select\n              aria-label=\"Default select example\"\n              name=\"userRole\"\n              onChange={handleChange}\n              value={formData.userRole}\n            >\n              <option value=\"user\">User</option>\n              <option value=\"admin\">Admin</option>\n            </Form.Select>\n          </Form.Group>\n\n          <Form.Group controlId=\"formBasicEmail\" className=\"mt-3\">\n          <Form.Control\n              type=\"email\"\n              placeholder=\"Enter Email\"\n              style={{ width: '350px' }}\n              name=\"email\"\n              value={formData.email}\n              onChange={handleChange}\n            />\n          </Form.Group>\n\n          <Form.Group controlId=\"formUsername\" className=\"mt-3\">\n          <Form.Control\n              type=\"text\"\n              placeholder=\"Enter Username\"\n              style={{ width: '350px' }}\n              name=\"username\"\n              value={formData.username}\n              onChange={handleChange}\n            />\n          </Form.Group>\n\n          <Form.Group controlId=\"formMobileNumber\" className=\"mt-3\">\n          <Form.Control\n              type=\"text\"\n              placeholder=\"Enter Mobile Number\"\n              style={{ width: '350px' }}\n              name=\"mobileNumber\"\n              value={formData.mobileNumber}\n              onChange={handleChange}\n            />\n          </Form.Group>\n\n          <Form.Group controlId=\"formPassword\" className=\"mt-3\">\n          <Form.Control\n              type=\"password\"\n              placeholder=\"Enter Password\"\n              style={{ width: '350px' }}\n              name=\"password\"\n              value={formData.password}\n              onChange={handleChange}\n            />\n          </Form.Group>\n\n          <Form.Group controlId=\"formConfirmPassword\" className=\"mt-3\">\n          <Form.Control\n              type=\"password\"\n              placeholder=\"Confirm Password\"\n              style={{ width: '350px' }}\n              name=\"confirmPassword\"\n              value={formData.confirmPassword}\n              onChange={handleChange}\n            />\n          </Form.Group>\n          \n          <div className=\"d-flex justify-content-center mt-4\">\n            <Button type=\"submit\" variant=\"primary\" >Register</Button> \n          </div>\n        </Form>\n      </Container>\n    </div>\n  );\n}\n\nexport default Registration;\n","/home/coder/project/workspace/reactapp/src/components/Admin/adminService.js",[],"/home/coder/project/workspace/reactapp/src/components/User/userService.js",["66","67"],"/home/coder/project/workspace/reactapp/src/components/Home/Homepage.js",[],"/home/coder/project/workspace/reactapp/src/components/Order/Myorder.js",[],"/home/coder/project/workspace/reactapp/src/components/Order/PlaceOrder.js",["68"],"import React, { Component } from 'react';\nimport { Container, Row, Col, Button } from 'react-bootstrap';\nimport Nav from 'react-bootstrap/Nav';\nimport { Link } from 'react-router-dom';\n\nclass PlaceOrder extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      orders: [],  \n      editingIndex: -1,  \n      editedGiftName: '',  \n      editedPrice: '', \n      editedQuantity: '',  \n    };\n  }\n\n  handleInputChange = (event) => {\n    const { name, value } = event.target;\n    this.setState({ [name]: value });\n  };\n\n  addOrder = () => {\n    // Add your code to add an order here if needed\n  };\n\n  removeOrder = (index) => {\n    const { orders } = this.state;\n    orders.splice(index, 1);\n    this.setState({ orders });\n  };\n\n  editOrder = (index) => {\n    const { orders } = this.state;\n    const { giftName, price, quantity } = orders[index];\n\n    this.setState({\n      editingIndex: index,\n      editedGiftName: giftName,\n      editedPrice: price.toString(),\n      editedQuantity: quantity.toString(),\n    });\n  };\n\n  saveOrder = (index) => {\n    const { orders, editedGiftName, editedPrice, editedQuantity } = this.state;\n\n    const updatedOrder = { ...orders[index], giftName: editedGiftName, price: parseFloat(editedPrice), quantity: parseInt(editedQuantity, 10) };\n    const updatedOrders = [...orders];\n    updatedOrders[index] = updatedOrder;\n\n    this.setState({\n      orders: updatedOrders,\n      editingIndex: -1,  \n      editedGiftName: '',\n      editedPrice: '',\n      editedQuantity: '',\n    });\n  };\n\n  render() {\n    const { orders, editingIndex, editedGiftName, editedPrice, editedQuantity } = this.state;\n\n    return (\n      <div style={{ backgroundColor: 'grey', minHeight: '100vh' }}>\n        <div style={{ margin: '20px' }}>\n          <Nav defaultActiveKey=\"/Homepage\" as=\"ul\" className=\"justify-content-center\" style={{ backgroundColor: 'green' }}>\n            <div className=\"d-flex\" style={{ fontWeight: 'bold' }}>\n              <div className=\"nav-item mx-2\">\n                <Link to=\"/Myorder\" className=\"nav-link\" style={{ color: 'white', fontSize: '20px' }}>\n                  My order\n                </Link>\n              </div>\n              <div className=\"nav-item mx-2\">\n                <Link to=\"/Homepage\" className=\"nav-link\" style={{ color: 'white', fontSize: '30px' }}>\n                  Home\n                </Link>\n              </div>\n              <div className=\"nav-item ml-auto\">\n                <Link to=\"/Login\" className=\"nav-link\" style={{ color: 'white', fontSize: '20px' }}>\n                  Logout\n                </Link>\n              </div>\n            </div>\n          </Nav>\n        </div>\n        <Container>\n          <Row>\n            <Col md={12}>\n              <h2 style={{ fontSize: '24px' }}></h2>\n              <table className=\"table\">\n                <thead>\n                  <tr style={{ backgroundColor: 'darkgreen' }}>\n                    <th>Gift Name</th>\n                    <th>Price</th>\n                    <th>Quantity</th>\n                    <th>Actions</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {orders.map((order, index) => (\n                    <tr key={index} style={{ backgroundColor: 'lightgreen' }}>\n                      <td>\n                        {editingIndex === index ? (\n                          <input\n                            type=\"text\"\n                            name=\"editedGiftName\"\n                            value={editedGiftName}\n                            onChange={(e) => this.handleInputChange(e)}\n                            style={{ width: '100px' }}\n                          />\n                        ) : (\n                          order.giftName\n                        )}\n                      </td>\n                      <td>\n                        {editingIndex === index ? (\n                          <input\n                            type=\"text\"\n                            name=\"editedPrice\"\n                            value={editedPrice}\n                            onChange={(e) => this.handleInputChange(e)}\n                            style={{ width: '100px' }}\n                          />\n                        ) : (\n                          order.price\n                        )}\n                      </td>\n                      <td>\n                        {editingIndex === index ? (\n                          <input\n                            type=\"text\"\n                            name=\"editedQuantity\"\n                            value={editedQuantity}\n                            onChange={(e) => this.handleInputChange(e)}\n                            style={{ width: '100px' }}\n                          />\n                        ) : (\n                          order.quantity\n                        )}\n                      </td>\n                      <td>\n                        {editingIndex === index ? (\n                          <>\n                            <Button variant=\"success\" onClick={() => this.saveOrder(index)} style={{ marginRight: '10px' }}>\n                              Save\n                            </Button>\n                            <Button variant=\"secondary\" onClick={() => this.setState({ editingIndex: -1 })}>\n                              Cancel\n                            </Button>\n                          </>\n                        ) : (\n                          <>\n                            <Button variant=\"warning\" onClick={() => this.editOrder(index)} style={{ marginRight: '10px' }}>\n                              Edit\n                            </Button>\n                            <Button variant=\"danger\" onClick={() => this.removeOrder(index)}>\n                              Remove\n                            </Button>\n                          </>\n                        )}\n                      </td>\n                    </tr>\n                  ))}\n                </tbody>\n              </table>\n            </Col>\n          </Row>\n        </Container>\n        <div className=\"text-center\">\n          <Button variant=\"primary\">\n            Pay\n          </Button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default PlaceOrder;\n",{"ruleId":"69","replacedBy":"70"},{"ruleId":"71","replacedBy":"72"},{"ruleId":"73","severity":1,"message":"74","line":2,"column":31,"nodeType":"75","messageId":"76","endLine":2,"endColumn":35},{"ruleId":"77","severity":1,"message":"78","line":109,"column":15,"nodeType":"79","endLine":109,"endColumn":48},{"ruleId":"73","severity":1,"message":"80","line":7,"column":22,"nodeType":"75","messageId":"76","endLine":7,"endColumn":30},{"ruleId":"73","severity":1,"message":"81","line":2,"column":7,"nodeType":"75","messageId":"76","endLine":2,"endColumn":19},{"ruleId":"82","severity":1,"message":"83","line":20,"column":1,"nodeType":"84","endLine":23,"endColumn":3},{"ruleId":"77","severity":1,"message":"78","line":90,"column":15,"nodeType":"79","endLine":90,"endColumn":48},"no-native-reassign",["85"],"no-negated-in-lhs",["86"],"no-unused-vars","'Form' is defined but never used.","Identifier","unusedVar","jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","JSXOpeningElement","'getUsers' is defined but never used.","'API_BASE_URL' is assigned a value but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","no-global-assign","no-unsafe-negation"]